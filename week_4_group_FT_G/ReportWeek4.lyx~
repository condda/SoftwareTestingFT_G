#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
Test Report Assignment week 4
\end_layout

\begin_layout Section*
Assignment 4
\end_layout

\begin_layout Standard
For assignment 4, we built quickCheck-testable tests:
\end_layout

\begin_layout LyX-Code
testSimpleIntersect :: Set Int -> Set Int -> Bool
\end_layout

\begin_layout LyX-Code
testSimpleIntersect a b = subSet (setIntersect a b) a
\end_layout

\begin_layout LyX-Code
  && subSet (setIntersect a b) b
\end_layout

\begin_layout Standard
This function tests if the intersect of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 is a subset of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
\end_layout

\begin_layout LyX-Code
testSubsetUnion :: Set Int -> Set Int -> Bool
\end_layout

\begin_layout LyX-Code
testSubsetUnion a b = subSet a (setUnion a b)
\end_layout

\begin_layout LyX-Code
  && subSet b (setUnion a b)
\end_layout

\begin_layout Standard
This function tests if the 
\begin_inset Formula $a$
\end_inset

 is a subset of the union of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

, and if 
\begin_inset Formula $b$
\end_inset

 is a subset of the union of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
\end_layout

\begin_layout LyX-Code
testDifferenceSubset :: Set Int -> Set Int -> Bool
\end_layout

\begin_layout LyX-Code
testDifferenceSubset a b = subSet (setDiff a b) a
\end_layout

\begin_layout Standard
This function tests if the difference set of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 is a subset of 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout LyX-Code
testEquivalenceRelations :: Set Int -> Set Int -> Bool
\end_layout

\begin_layout LyX-Code
testEquivalenceRelations a b = (setIntersect a b)
\end_layout

\begin_layout LyX-Code
  == (setDiff (setUnion a b) (setUnion (setDiff a b) (setDiff b a)))
\end_layout

\begin_layout Standard
This function tests all three functions, by testing if the intersection
 of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 is equivalent to the difference set of the union of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 and the union of the difference set 
\begin_inset Formula $a$
\end_inset

 
\begin_inset Formula $b$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 
\begin_inset Formula $a$
\end_inset

.
 From these tests, we built an hspec function which tests the three properties
 for different sets of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
 This quickCheck worked correctly.
\end_layout

\begin_layout Section*
Assignment 7
\end_layout

\begin_layout Standard
To test 
\noun on
trClos
\noun default
 we found on Wikipedia that it should hold, that: 
\begin_inset Formula 
\[
R^{+}\Longleftrightarrow R\subseteq R^{+}\cap\, R^{+}is\: transative\,\cap\, R^{+}is\: minimal
\]

\end_inset

In the workshop we also proved that,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R\circ R\subseteq R\Leftrightarrow R\, is\, transative
\]

\end_inset

We tested this using the following three methods:
\end_layout

\begin_layout LyX-Code
testTrClosRoRinR :: [(Int, Int)] -> Bool
\end_layout

\begin_layout LyX-Code
testTrClosRoRinR r = testTransitive $ trClos r 
\end_layout

\begin_layout Standard
Which tests 
\begin_inset Formula $R\circ R\subseteq R\Leftrightarrow R\,\mbox{is\,\ transitive}$
\end_inset

.
 Here, 
\noun on
testTransitive
\noun default
 is defined as:
\end_layout

\begin_layout LyX-Code
testTransitive :: [(Int, Int)] -> Bool
\end_layout

\begin_layout LyX-Code
testTransitive r = (r @@ r) `allIn` r
\end_layout

\begin_layout Standard
And `
\noun on
allIn
\noun default
` is defined as following:
\end_layout

\begin_layout LyX-Code
allIn :: Eq a => Rel a -> Rel a -> Bool
\end_layout

\begin_layout LyX-Code
allIn [] s = True
\end_layout

\begin_layout LyX-Code
allIn (r:rs) s = r `elem` s && rs `allIn` s
\end_layout

\begin_layout Standard
We then tested if 
\begin_inset Formula $R$
\end_inset

 was in the transitive closure of 
\begin_inset Formula $R$
\end_inset

, by calling the following function:
\end_layout

\begin_layout LyX-Code
testTrClosRinR :: [(Int, Int)] -> Bool
\end_layout

\begin_layout LyX-Code
testTrClosRinR r = r `allIn` (trClos r)
\end_layout

\begin_layout Standard
And finally we tested that 
\begin_inset Formula $R^{+}$
\end_inset

should be minimal, so there shouldn't be a smaller subset thats also transative
 and contains R, we solved this with an 
\begin_inset Formula $O(2^{n})$
\end_inset

 time test function, which basically creates al the possible powerLists
 of 
\begin_inset Formula $R^{+}$
\end_inset

 and tests if there is only one (R) that satisfies the transitivity condition.
\end_layout

\begin_layout LyX-Code
testTrClosIsMinimal :: [(Int, Int)] -> Bool
\end_layout

\begin_layout LyX-Code
testTrClosIsMinimal rNotUnique = (1==) $ length $
\end_layout

\begin_layout LyX-Code
  (filter testTransitive (map (r ++) (powerList $ ((trClos r) 
\backslash

\backslash
 r))))
\end_layout

\begin_layout LyX-Code
  where r = nub rNotUnique
\end_layout

\begin_layout Standard
From these tests, we built an hspec function which tests the three properties
 for different sets of 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

.
\end_layout

\end_body
\end_document
